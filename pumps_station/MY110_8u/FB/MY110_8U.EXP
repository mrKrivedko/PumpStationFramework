FUNCTION_BLOCK MY110_8u
(* Function block implementation analog outputs module  MB110 8y. *)

VAR_INPUT
	info_current_channel: classAnalogOutputModule;
	(* added personal channel settings... later *)
END_VAR

VAR_OUTPUT
	(* out type of module channel - int16 *)
	ch1_value: WORD;
	ch2_value: WORD;
	ch3_value: WORD;
	ch4_value: WORD;
	ch5_value: WORD;
	ch6_value: WORD;
	ch7_value: WORD;
	ch8_value: WORD;
END_VAR

VAR
	(* general settings *)
	ch_ain_l: REAL := 4;  (* low range output current of channel, mA *)
	ch_ain_h: REAL := 20;  (* high range output current of channel, mA *)
	ch_analog_min_value: REAL :=  0;  (* low range output value DAC *)
	ch_analog_max_value: REAL := 1000;  (* high range output value DAC *)
	set_params: classParamsValueScaling;
END_VAR

set_params := get_params_value_scaling(ch_ain_l, ch_ain_h, ch_analog_min_value, ch_analog_max_value);

ch1_value := REAL_TO_INT(value_scaling(info_current_channel.channel1.current_value, set_params));
ch2_value := REAL_TO_INT(value_scaling(info_current_channel.channel2.current_value, set_params));
ch3_value := REAL_TO_INT(value_scaling(info_current_channel.channel3.current_value, set_params));
ch4_value := REAL_TO_INT(value_scaling(info_current_channel.channel4.current_value, set_params));
ch5_value := REAL_TO_INT(value_scaling(info_current_channel.channel5.current_value, set_params));
ch6_value := REAL_TO_INT(value_scaling(info_current_channel.channel6.current_value, set_params));
ch7_value := REAL_TO_INT(value_scaling(info_current_channel.channel7.current_value, set_params));
ch8_value := REAL_TO_INT(value_scaling(info_current_channel.channel8.current_value, set_params));

END_FUNCTION_BLOCK